version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
    working_directory: /tmp/workspace
    steps:
      - checkout  #go to Github, find my code
      - run: mkdir -p /tmp/workspace   #parent folder
      # Download and cache dependencies
      - restore_cache:  #
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn clean install -DskipTests  #it will package my app, compile code
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .
  docker-image-and-publish:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: ls -a /tmp/workspace
      - run:
          name: Create Docker image and push to ECR
          command: aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 340062320022.dkr.ecr.us-west-2.amazonaws.com && docker build -t ticketingapp /tmp/workspace && docker tag ticketingapp:latest 340062320022.dkr.ecr.us-west-2.amazonaws.com/ticketingapp:latest && docker push 340062320022.dkr.ecr.us-west-2.amazonaws.com/ticketingapp:latest
  deploy-job:
    docker:
      #specify the version you desire here
      - image: circleci/node:10.0.0
    steps:
      - run:
          name: Execute Deployment Script
          command: |
            ssh -o "StrictHostKeyChecking=no" ec2-user@ec2-35-91-72-169.us-west-2.compute.amazonaws.com '<<ENDSSH'
            /bin/bash bin/deploy_image.sh
            docker ps
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - docker-image-and-publish:
          requires:
            - build
      - deploy-job:
          requires:
            - docker-image-and-publish